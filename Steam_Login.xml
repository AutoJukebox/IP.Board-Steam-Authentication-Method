<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>Steam Login</hook_name>
      <hook_desc>Displays the buttons required to allow the user to login with steam</hook_desc>
      <hook_author>Adam Lavin</hook_author>
      <hook_email>adam@lavoaster.co.uk</hook_email>
      <hook_website>http://www.lavoaster.co.uk</hook_website>
      <hook_update_check>http://www.lavoaster.co.uk/update.php?app=steam_login</hook_update_check>
      <hook_requirements><![CDATA[a:3:{s:21:"required_applications";a:0:{}s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>1.0.0</hook_version_human>
      <hook_version_long>1.0.0</hook_version_long>
      <hook_extra_data><![CDATA[a:3:{s:8:"database";a:0:{}s:7:"display";a:1:{s:6:"custom";s:24:"install_steamInstall.php";}s:6:"custom";s:16:"steamInstall.php";}]]></hook_extra_data>
      <hook_key>steam_login</hook_key>
      <hook_global_caches/>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>steamDisplayButtonAjax.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>steamDisplayButtonAjax</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:11:"skin_global";s:12:"skinFunction";s:11:"inlineLogin";s:4:"type";s:2:"if";s:2:"id";s:14:"haswindowslive";s:8:"position";s:10:"post.endif";}]]></hook_data>
      <hooks_source><![CDATA[<?php
/**
 * @author Adam Lavin (Lavoaster)
 * @copyright 2012
 * @license http://opensource.org/licenses/mit-license.php The MIT License
 */
class steamDisplayButtonAjax
{
        public function getOutput()
        {
                $base_url = ipsRegistry::$settings['base_url'];
                $board_url = ipsRegistry::$settings['board_url'];
                $hash = ipsRegistry::instance()->member()->form_hash;
                if(IPSLib::loginMethod_enabled('facebook') || IPSLib::loginMethod_enabled('twitter') || IPSLib::loginMethod_enabled('live')){
                $IPBHTML = <<<HTML
<li><a href='{$base_url}app=core&amp;module=global&amp;section=login&amp;do=process&amp;use_steam=1&amp;auth_key={$hash}' title='Login though Steam'><img src='{$board_url}/public/style_extra/signin/login-steam.png'/></a></li>
HTML;
                }
                return $IPBHTML;
        }
}
?>]]></hooks_source>
    </file>
    <file>
      <hook_file_real>steamDisplayButton.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>steamDisplayButton</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:10:"skin_login";s:12:"skinFunction";s:13:"showLogInForm";s:4:"type";s:2:"if";s:2:"id";s:14:"haswindowslive";s:8:"position";s:10:"post.endif";}]]></hook_data>
      <hooks_source><![CDATA[<?php
/**
 * @author Adam Lavin (Lavoaster)
 * @copyright 2012
 * @license http://opensource.org/licenses/mit-license.php The MIT License
 */
class steamDisplayButton
{
        public function getOutput()
        {
                $base_url = ipsRegistry::$settings['base_url'];
                $board_url = ipsRegistry::$settings['board_url'];
                $hash = ipsRegistry::instance()->member()->form_hash;
                $IPBHTML = <<<HTML
<li><a href="{$base_url}app=core&amp;module=global&amp;section=login&amp;do=process&amp;use_steam=1&amp;auth_key={$hash}" class='ipsButton_secondary fixed_width'><img src='{$board_url}/public/style_extra/signin/login-steam-icon.png' alt='Sign in through Steam' /> &nbsp; Sign In with Steam</a></li>
HTML;

                return $IPBHTML;
        }
}
?>]]></hooks_source>
    </file>
    <file>
      <hook_file_real>steamDisplayIcon.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>steamDisplayIcon</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:11:"skin_global";s:12:"skinFunction";s:14:"globalTemplate";s:4:"type";s:2:"if";s:2:"id";s:10:"limWindows";s:8:"position";s:10:"post.endif";}]]></hook_data>
      <hooks_source><![CDATA[<?php
/**
 * @author Adam Lavin (Lavoaster)
 * @copyright 2012
 * @license http://opensource.org/licenses/mit-license.php The MIT License
 */
class steamDisplayIcon
{
        public function getOutput()
        {   
            $IPBHTML = "<a href='".ipsRegistry::$settings['base_url']."app=core&amp;module=global&amp;section=login&amp;do=process&amp;use_steam=1&amp;auth_key=".ipsRegistry::instance()->member()->form_hash."'><img src='".ipsRegistry::$settings['board_url']."/public/style_extra/signin/login-steam-icon.png' alt='Sign in through Steam' /></a>";
            return $IPBHTML;
        }
}
?>]]></hooks_source>
    </file>
    <file>
      <hook_file_real>steamDisplayButtonAjax2.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>steamDisplayButtonAjax2</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:11:"skin_global";s:12:"skinFunction";s:11:"inlineLogin";s:4:"type";s:2:"if";s:2:"id";s:16:"registerServices";s:8:"position";s:11:"pre.startif";}]]></hook_data>
      <hooks_source><![CDATA[<?php
/**
 * @author Adam Lavin (Lavoaster)
 * @copyright 2012
 * @license http://opensource.org/licenses/mit-license.php The MIT License
 */
class steamDisplayButtonAjax2
{
        public function getOutput()
        {
                $base_url = ipsRegistry::$settings['base_url'];
                $board_url = ipsRegistry::$settings['board_url'];
                $hash = ipsRegistry::instance()->member()->form_hash;
                if(!(IPSLib::loginMethod_enabled('facebook') || IPSLib::loginMethod_enabled('twitter') || IPSLib::loginMethod_enabled('live'))){
                $IPBHTML = <<<HTML
            <div class='ipsBox_notice'>
                <ul class='ipsList_inline'>
                    <li><a href='{$base_url}app=core&amp;module=global&amp;section=login&amp;do=process&amp;use_steam=1&amp;auth_key={$hash}' title='Login though Steam'><img src='{$board_url}/public/style_extra/signin/login-steam.png'/></a></li>
                </ul>
            </div>
HTML;
                }
                return $IPBHTML;
        }
}
?>]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_custom>
    <file>
      <filename>steamInstall.php</filename>
      <source><![CDATA[<?php
class steamInstall
{
    public function install()
    {
        ipsRegistry::DB()->query("ALTER TABLE ".ipsRegistry::$settings['sql_tbl_prefix']."members ADD `steamid` VARCHAR(17) NULL");    
    }
    public function uninstall()
    {
        ipsRegistry::DB()->query("ALTER TABLE ".ipsRegistry::$settings['sql_tbl_prefix']."members DROP `steamid`");    
    }
}
?>
]]></source>
    </file>
  </hookextras_custom>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_replacements/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>
